resources:

# instance templates

- name: {{ gcloud_env }}-master-template
  properties:
    description: 'master-template'
    properties:
      canIpForward: false
      disks:
      - autoDelete: true
        boot: true
        index: 0
        initializeParams:
          diskSizeGb: {{ gcloud_vm_disk_size }}
          sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7
          diskType: pd-ssd
      - autoDelete: true
        boot: false
        index: 1
        deviceName: {{ gcloud_docker_volume_name }}
        type: SCRATCH
        initializeParams:
          diskType: local-ssd
      machineType: {{ gcloud_masters_flavor }}
      networkInterfaces:
      - accessConfigs:
        - name: external-nat
          type: ONE_TO_ONE_NAT
        network: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/global/networks/default
      scheduling:
        automaticRestart: true
        onHostMaintenance: MIGRATE
        preemptible: {{ gcloud_masters_preemptible }}
      serviceAccounts:
      - scopes:
        - https://www.googleapis.com/auth/cloud.useraccounts.readonly
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.read_only
        - https://www.googleapis.com/auth/logging.write
        - https://www.googleapis.com/auth/monitoring.write
        - https://www.googleapis.com/auth/service.management.readonly
        - https://www.googleapis.com/auth/servicecontrol
      tags:
        items:
        - {{ gcloud_env }}ocp
        - {{ gcloud_env }}-master
        - {{ gcloud_env }}-node
  type: compute.v1.instanceTemplate
- name: {{ gcloud_env }}-appnode-template
  properties:
    description: 'appnode-template'
    properties:
      canIpForward: false
      disks:
      - autoDelete: true
        boot: true
        index: 0
        initializeParams:
          diskSizeGb: {{ gcloud_vm_disk_size }}
          sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7
          diskType: pd-ssd
      - autoDelete: true
        boot: false
        index: 1
        deviceName: {{ gcloud_docker_volume_name }}
        type: SCRATCH
        initializeParams:
          diskType: local-ssd
      machineType: {{ gcloud_appnodes_flavor }}
      networkInterfaces:
      - accessConfigs:
        - name: external-nat
          type: ONE_TO_ONE_NAT
        network: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/global/networks/default
      scheduling:
        automaticRestart: true
        onHostMaintenance: MIGRATE
        preemptible: {{ gcloud_appnodes_preemptible }}
      serviceAccounts:
      - scopes:
        - https://www.googleapis.com/auth/cloud.useraccounts.readonly
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.read_only
        - https://www.googleapis.com/auth/logging.write
        - https://www.googleapis.com/auth/monitoring.write
        - https://www.googleapis.com/auth/service.management.readonly
        - https://www.googleapis.com/auth/servicecontrol
      tags:
        items:
        - {{ gcloud_env }}ocp
        - {{ gcloud_env }}-appnode
        - {{ gcloud_env }}-node
  type: compute.v1.instanceTemplate
- name: {{ gcloud_env }}-infranode-template
  properties:
    description: 'infranode-template'
    properties:
      canIpForward: false
      disks:
      - autoDelete: true
        boot: true
        index: 0
        initializeParams:
          diskSizeGb: {{ gcloud_vm_disk_size }}
          sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7
          diskType: pd-ssd
      - autoDelete: true
        boot: false
        index: 1
        deviceName: {{ gcloud_docker_volume_name }}
        type: SCRATCH
        initializeParams:
          diskType: local-ssd
      machineType: {{ gcloud_infranodes_flavor }}
      networkInterfaces:
      - accessConfigs:
        - name: external-nat
          type: ONE_TO_ONE_NAT
        network: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/global/networks/default
      scheduling:
        automaticRestart: true
        onHostMaintenance: MIGRATE
        preemptible: {{ gcloud_infranodes_preemptible }}
      serviceAccounts:
      - scopes:
        - https://www.googleapis.com/auth/cloud.useraccounts.readonly
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.read_only
        - https://www.googleapis.com/auth/logging.write
        - https://www.googleapis.com/auth/monitoring.write
        - https://www.googleapis.com/auth/service.management.readonly
        - https://www.googleapis.com/auth/servicecontrol
      tags:
        items:
        - {{ gcloud_env }}ocp
        - {{ gcloud_env }}-infranode
        - {{ gcloud_env }}-node
  type: compute.v1.instanceTemplate    
  
# group managers

- name: {{ gcloud_env }}-master-igm
  properties:
    baseInstanceName: {{ gcloud_env }}-master
    instanceTemplate: $(ref.{{ gcloud_env }}-master-template.selfLink)
    namedPorts:
    - name: {{ gcloud_env }}-web-console
      port: 8443
    targetPools:
    - $(ref.{{ gcloud_env }}-master-pool.selfLink)
    targetSize: {{ gcloud_masters_num }}
    region: {{ gcloud_region }}
    distributionPolicy:
      zones: 
{% for i in gcloud_masters_zones %}       
      - zone: "zones/{{ i }}"
{% endfor %}  
  type: compute.beta.regionInstanceGroupManager  
- name: {{ gcloud_env }}-appnode-igm
  properties:
    baseInstanceName: {{ gcloud_env }}-node
    instanceTemplate: $(ref.{{ gcloud_env }}-appnode-template.selfLink)
    targetSize: {{ gcloud_appnodes_num }}
    region: {{ gcloud_region }}
    distributionPolicy:
      zones: 
{% for i in gcloud_appnodes_zones %}       
      - zone: "zones/{{ i }}"
{% endfor %}  
  type: compute.beta.regionInstanceGroupManager  
- name: {{ gcloud_env }}-infranode-igm
  properties:
    baseInstanceName: {{ gcloud_env }}-infranode
    instanceTemplate: $(ref.{{ gcloud_env }}-infranode-template.selfLink)
    targetPools:
    - $(ref.{{ gcloud_env }}-infranode-pool.selfLink)
    targetSize: {{ gcloud_infranodes_num }}
    region: {{ gcloud_region }}
    distributionPolicy:
      zones: 
{% for i in gcloud_infranodes_zones %}       
      - zone: "zones/{{ i }}"
{% endfor %}  
  type: compute.beta.regionInstanceGroupManager 

# master networking    
    
- type: compute.v1.address
  name: {{ gcloud_env }}-master-external
  properties:
    region: {{ gcloud_region }}
- name: {{ gcloud_env }}-master-https-health-check
  type: compute.v1.httpsHealthCheck
  properties:
    port: 8443
    requestPath: "/healthz"
- name: {{ gcloud_env }}-master-internal-https-health-check
  type: compute.v1.healthCheck
  properties:
    type: HTTPS
    httpsHealthCheck:
      port: 8443
      requestPath: "/healthz"   
- type: compute.v1.targetPool
  name: {{ gcloud_env }}-master-pool
  properties:
    region: {{ gcloud_region }}
- type: compute.v1.forwardingRule
  name: {{ gcloud_env }}-master-external-fwr
  properties: 
    region: {{ gcloud_region }}
    IPAddress: $(ref.{{ gcloud_env }}-master-external.selfLink)
    target: $(ref.{{ gcloud_env }}-master-pool.selfLink)
    IPProtocol: TCP    
- name: {{ gcloud_env }}-master-enternal-fw
  type: compute.v1.firewall
  properties:
    allowed:
    - IPProtocol: tcp
      ports:
      - 8443
    sourceRange: 0.0.0.0/0
    targetTags:
    - {{ gcloud_env }}-master
- name: {{ gcloud_env }}-master-internal-bes
  type: compute.v1.regionBackendService
  properties: 
    loadBalancingScheme: INTERNAL
    protocol: TCP
    region: {{ gcloud_region }}  
    healthChecks:
    - $(ref.{{ gcloud_env }}-master-internal-https-health-check.selfLink)
    backends:
    - group: $(ref.{{ gcloud_env }}-master-igm.instanceGroup)          
- type: compute.v1.forwardingRule
  name: {{ gcloud_env }}-master-internal-fwr
  properties: 
    region: {{ gcloud_region }}
    ports: 
    - 8443
    IPProtocol: TCP
    loadBalancingScheme: INTERNAL
    backendService: $(ref.{{ gcloud_env }}-master-internal-bes.selfLink)  
    
    
# infrande networking

- type: compute.v1.address
  name: {{ gcloud_env }}-infranode-external
  properties:
    region: {{ gcloud_region }}
- name: {{ gcloud_env }}-infranode-http-health-check
  type: compute.v1.httpHealthCheck
  properties:
    port: 1936
    requestPath: /healthz
- type: compute.v1.targetPool
  name: {{ gcloud_env }}-infranode-pool
  properties:
    region: {{ gcloud_region }}
#    instances:
#    - $(ref.{{ gcloud_env }}-infranode-igm.selfLink)  
    healthChecks: 
    - $(ref.{{ gcloud_env }}-infranode-http-health-check.selfLink)
- type: compute.v1.forwardingRule
  name: {{ gcloud_env }}-infranode-external-fwr
  properties: 
    region: {{ gcloud_region }}
    IPAddress: $(ref.{{ gcloud_env }}-infranode-external.selfLink)
    target: $(ref.{{ gcloud_env }}-infranode-pool.selfLink)
    IPProtocol: TCP
- name: {{ gcloud_env }}-infranode-external-fw
  type: compute.v1.firewall
  properties:
    allowed:
    - IPProtocol: tcp
      ports:
      - 80
      - 443
    sourceRange: 0.0.0.0/0
    targetTags:
    - {{ gcloud_env }}-infranode   
    
#regsitry bucket

- name: {{ gcloud_registry_bucket_name }} 
  properties:
    location: {{ gcloud_region }}
  type: storage.v1.bucket 
         