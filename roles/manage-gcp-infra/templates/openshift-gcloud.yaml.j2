resources:
# masters
{% for i in range(1,gcloud_masters_num|int+1) %}
{% set zone = gcloud_masters_zones[ (i % gcloud_masters_zones.__len__()) - 1 ] %}
{% set name = gcloud_masters_name_prefix ~ i|string %}
- type: compute.v1.disk
  name: {{ name }}-docker-{{ gcloud_env }} 
  properties:
    zone: {{ zone }}
    sizeGb: {{ gcloud_masters_docker_volume_size }}   
- type: compute.v1.instance
  name: {{ name }}-{{ gcloud_env }}
  properties:
    machineType: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/zones/{{ zone }}/machineTypes/{{ gcloud_masters_flavor }}
    scheduling:
      preemptible: {{ gcloud_masters_preemptible }}
      onHostMaintenance: TERMINATE
    zone: {{ zone }}
    disks:
    - deviceName: boot
      boot: true
      autoDelete: true
      initializeParams:
        diskSizeGb: {{ gcloud_vm_disk_size }}
        sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7        
    - deviceName: {{ gcloud_docker_volume_name }}
      boot: false
      source: $(ref.{{ name }}-docker-{{ gcloud_env }}.selfLink) 
    serviceAccounts: 
    - email: default
      scopes: 
      - "https://www.googleapis.com/auth/devstorage.read_only"
      - "https://www.googleapis.com/auth/logging.write"
      - "https://www.googleapis.com/auth/monitoring.write"
      - "https://www.googleapis.com/auth/servicecontrol"
      - "https://www.googleapis.com/auth/service.management.readonly"
      - "https://www.googleapis.com/auth/trace.append"
      - "https://www.googleapis.com/auth/compute"
      - "https://www.googleapis.com/auth/devstorage.read_write"   
    tags:
      items:
      - master-{{ gcloud_env }}
      - node-{{ gcloud_env }}
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/global/networks/default
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
{% endfor %}
{% for i in gcloud_masters_zones %}        
- type: compute.v1.instanceGroup
  name: {{ "master-"~i~"-ig-"~gcloud_env }}
  properties:
    zone: {{ i }}
    network: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/global/networks/default                     
{% endfor %}

# nodes

{% for i in range(1,gcloud_appnodes_num|int+1) %}
{% set zone = gcloud_appnodes_zones[ (i % gcloud_masters_zones.__len__()) - 1 ] %}
{% set name = gcloud_appnodes_name_prefix ~ i|string %}
- type: compute.v1.disk
  name: {{ name }}-docker-{{ gcloud_env }} 
  properties:
    zone: {{ zone }}
    sizeGb: {{ gcloud_appnodes_docker_volume_size }}   
- type: compute.v1.instance
  name: {{ name }}-{{ gcloud_env }}
  properties:
    machineType: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/zones/{{ zone }}/machineTypes/{{ gcloud_appnodes_flavor }}
    scheduling:
      preemptible: {{ gcloud_appnodes_preemptible }}
      onHostMaintenance: TERMINATE
    zone: {{ zone }}
    disks:
    - deviceName: boot
      boot: true
      autoDelete: true
      initializeParams:
        diskSizeGb: {{ gcloud_vm_disk_size }}
        sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7        
    - deviceName: {{ gcloud_docker_volume_name }}
      boot: false
      source: $(ref.{{ name }}-docker-{{ gcloud_env }}.selfLink)  
    serviceAccounts: 
    - email: default
      scopes: 
      - "https://www.googleapis.com/auth/devstorage.read_only"
      - "https://www.googleapis.com/auth/logging.write"
      - "https://www.googleapis.com/auth/monitoring.write"
      - "https://www.googleapis.com/auth/servicecontrol"
      - "https://www.googleapis.com/auth/service.management.readonly"
      - "https://www.googleapis.com/auth/trace.append"
      - "https://www.googleapis.com/auth/compute"
      - "https://www.googleapis.com/auth/devstorage.read_write"   
    tags:
      items:
      - appnode-{{ gcloud_env }}
      - node-{{ gcloud_env }}
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/global/networks/default
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT           
{% endfor %}

# infranodes

{% for i in range(1,gcloud_infranodes_num|int+1) %}
{% set zone = gcloud_infranodes_zones[ (i % gcloud_masters_zones.__len__()) - 1 ] %}
{% set name = gcloud_infranodes_name_prefix ~ i|string %}
- type: compute.v1.disk
  name: {{ name }}-docker-{{ gcloud_env }} 
  properties:
    zone: {{ zone }}
    sizeGb: {{ gcloud_infranodes_docker_volume_size }}   
- type: compute.v1.instance
  name: {{ name }}-{{ gcloud_env }}
  properties:
    machineType: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/zones/{{ zone }}/machineTypes/{{ gcloud_infranodes_flavor }}
    scheduling:
      preemptible: {{ gcloud_infranodes_preemptible }}
      onHostMaintenance: TERMINATE
    zone: {{ zone }}
    disks:
    - deviceName: boot
      boot: true
      autoDelete: true
      initializeParams:
        diskSizeGb: {{ gcloud_vm_disk_size }}
        sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7        
    - deviceName: {{ gcloud_docker_volume_name }}
      boot: false
      source: $(ref.{{ name }}-docker-{{ gcloud_env }}.selfLink)   
    serviceAccounts: 
    - email: default
      scopes: 
      - "https://www.googleapis.com/auth/devstorage.read_only"
      - "https://www.googleapis.com/auth/logging.write"
      - "https://www.googleapis.com/auth/monitoring.write"
      - "https://www.googleapis.com/auth/servicecontrol"
      - "https://www.googleapis.com/auth/service.management.readonly"
      - "https://www.googleapis.com/auth/trace.append"
      - "https://www.googleapis.com/auth/compute"
      - "https://www.googleapis.com/auth/devstorage.read_write"   
    tags:
      items:
      - infranode-{{ gcloud_env }}
      - node-{{ gcloud_env }}
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/global/networks/default
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT           
{% endfor %}

# infrande networking

- type: compute.v1.address
  name: infranode-external-{{ gcloud_env }}
  properties:
    region: {{ gcloud_region }}
- name: infranode-http-health-check-{{ gcloud_env }}
  type: compute.v1.httpHealthCheck
  properties:
    port: 80
- type: compute.v1.targetPool
  name: infranode-pool-{{ gcloud_env }}
  properties:
    region: {{ gcloud_region }}
    instances:
{% for i in range(1,gcloud_infranodes_num|int+1) %}
    - $(ref.{{ gcloud_infranodes_name_prefix ~ i|string }}-{{ gcloud_env }}.selfLink)
{% endfor %}    
    healthChecks: 
    - $(ref.infranode-http-health-check-{{ gcloud_env }}.selfLink)
- type: compute.v1.forwardingRule
  name: infranode-external-fwr-{{ gcloud_env }}
  properties: 
    region: {{ gcloud_region }}
    IPAddress: $(ref.infranode-external-{{ gcloud_env }}.selfLink)
    target: $(ref.infranode-pool-{{ gcloud_env }}.selfLink)
    IPProtocol: TCP
- name: infranode-external-fw-{{ gcloud_env }}
  type: compute.v1.firewall
  properties:
    allowed:
    - IPProtocol: tcp
      ports:
      - 80
      - 443
    sourceRange: 0.0.0.0/0
    targetTags:
    - infranode-{{ gcloud_env }}
    
# master networking    
    
- type: compute.v1.address
  name: master-external-{{ gcloud_env }}
  properties:
    region: {{ gcloud_region }}
- name: master-https-health-check-{{ gcloud_env }}
  type: compute.v1.httpsHealthCheck
  properties:
    port: 8443
    requestPath: "/healthz"
- name: master-internal-https-health-check-{{ gcloud_env }}
  type: compute.v1.healthCheck
  properties:
    type: HTTPS
    httpsHealthCheck:
      port: 8443
      requestPath: "/healthz"   
- type: compute.v1.targetPool
  name: master-pool-{{ gcloud_env }}
  properties:
    region: {{ gcloud_region }}
    instances: 
{% for i in range(1,gcloud_masters_num|int+1) %}
    - $(ref.{{ gcloud_masters_name_prefix ~ i|string }}-{{ gcloud_env }}.selfLink)
{% endfor %}
#    healthChecks: 
#    - $(ref.master-https-health-check-{{ gcloud_env }}.selfLink)
- type: compute.v1.forwardingRule
  name: master-external-fwr-{{ gcloud_env }}
  properties: 
    region: {{ gcloud_region }}
    IPAddress: $(ref.master-external-{{ gcloud_env }}.selfLink)
    target: $(ref.master-pool-{{ gcloud_env }}.selfLink)
    IPProtocol: TCP    
- name: master-enternal-fw-{{ gcloud_env }}
  type: compute.v1.firewall
  properties:
    allowed:
    - IPProtocol: tcp
      ports:
      - 8443
    sourceRange: 0.0.0.0/0
    targetTags:
    - master-{{ gcloud_env }}
- name: master-internal-bs-{{ gcloud_env }}
  type: compute.v1.regionBackendService
  properties: 
    loadBalancingScheme: INTERNAL
    protocol: TCP
    region: {{ gcloud_region }}  
    healthChecks:
    - $(ref.master-internal-https-health-check-{{ gcloud_env }}.selfLink)
    backends:
{% for i in gcloud_masters_zones %} 
    - group: $(ref.{{ "master-"~i~"-ig-"~gcloud_env }}.selfLink) 
{% endfor %}         
- type: compute.v1.forwardingRule
  name: master-internal-fwr-{{ gcloud_env }}
  properties: 
    region: {{ gcloud_region }}
    ports: 
    - 8443
    IPProtocol: TCP
    loadBalancingScheme: INTERNAL
    backendService: $(ref.master-internal-bs-{{ gcloud_env }}.selfLink)
    
- name: {{ gcloud_registry_bucket_name }} 
  properties:
    location: {{ gcloud_region }}
  type: storage.v1.bucket    

