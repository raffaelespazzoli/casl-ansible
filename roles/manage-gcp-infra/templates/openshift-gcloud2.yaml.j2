resources:

# instance templates

- name: {{ gcloud_env }}-master-template
  properties:
    description: 'master-template'
    properties:
      canIpForward: false
      disks:
      - autoDelete: true
        boot: true
        index: 0
        initializeParams:
          diskSizeGb: {{ gcloud_vm_disk_size }}
          sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7
          diskType: pd-ssd
      - autoDelete: true
        boot: false
        index: 1
        deviceName: {{ gcloud_docker_volume_name }}
        initializeParams:
          sourceImage: global/images/empty-1g
          diskSizeGb: {{ gcloud_masters_docker_volume_size }}
          diskType: pd-ssd
      machineType: {{ gcloud_masters_flavor }}
      networkInterfaces:
      - accessConfigs:
        - name: external-nat
          type: ONE_TO_ONE_NAT
        network: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/global/networks/default
      scheduling:
        automaticRestart: true
        onHostMaintenance: MIGRATE
        preemptible: {{ gcloud_masters_preemptible }}
      serviceAccounts:
      - scopes:
        - https://www.googleapis.com/auth/cloud.useraccounts.readonly
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.read_only
        - https://www.googleapis.com/auth/logging.write
        - https://www.googleapis.com/auth/monitoring.write
        - https://www.googleapis.com/auth/service.management.readonly
        - https://www.googleapis.com/auth/servicecontrol
      tags:
        items:
        - {{ gcloud_env }}
        - {{ gcloud_env }}-master
        - {{ gcloud_env }}-node
  type: compute.v1.instanceTemplate
- name: {{ gcloud_env }}-node-template
  properties:
    description: 'node-template'
    properties:
      canIpForward: false
      disks:
      - autoDelete: true
        boot: true
        index: 0
        initializeParams:
          diskSizeGb: {{ gcloud_vm_disk_size }}
          sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7
          diskType: pd-ssd
      - autoDelete: true
        boot: false
        index: 1
        deviceName: {{ gcloud_docker_volume_name }}
        initializeParams:
          sourceImage: global/images/empty-1g
          diskSizeGb: {{ gcloud_nodes_docker_volume_size }}
          diskType: pd-ssd
      machineType: {{ gcloud_appnodes_flavor }}
      networkInterfaces:
      - accessConfigs:
        - name: external-nat
          type: ONE_TO_ONE_NAT
        network: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/global/networks/default
      scheduling:
        automaticRestart: true
        onHostMaintenance: MIGRATE
        preemptible: {{ gcloud_appnodes_preemptible }}
      serviceAccounts:
      - scopes:
        - https://www.googleapis.com/auth/cloud.useraccounts.readonly
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.read_only
        - https://www.googleapis.com/auth/logging.write
        - https://www.googleapis.com/auth/monitoring.write
        - https://www.googleapis.com/auth/service.management.readonly
        - https://www.googleapis.com/auth/servicecontrol
      tags:
        items:
        - {{ gcloud_env }}
        - {{ gcloud_env }}-appnode
        - {{ gcloud_env }}-node
  type: compute.v1.instanceTemplate
- name: {{ gcloud_env }}-infranode-template
  properties:
    description: 'infranode-template'
    properties:
      canIpForward: false
      disks:
      - autoDelete: true
        boot: true
        index: 0
        initializeParams:
          diskSizeGb: {{ gcloud_vm_disk_size }}
          sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7
          diskType: pd-ssd
      - autoDelete: true
        boot: false
        index: 1
        deviceName: {{ gcloud_docker_volume_name }}
        initializeParams:
          sourceImage: global/images/empty-1g
          diskSizeGb: {{ gcloud_infranodes_docker_volume_size }}
          diskType: pd-ssd
      machineType: {{ gcloud_infranodes_flavor }}
      networkInterfaces:
      - accessConfigs:
        - name: external-nat
          type: ONE_TO_ONE_NAT
        network: https://www.googleapis.com/compute/v1/projects/{{ gcloud_project_name }}/global/networks/default
      scheduling:
        automaticRestart: true
        onHostMaintenance: MIGRATE
        preemptible: {{ gcloud_infranodes_preemptible }}
      serviceAccounts:
      - scopes:
        - https://www.googleapis.com/auth/cloud.useraccounts.readonly
        - https://www.googleapis.com/auth/compute
        - https://www.googleapis.com/auth/devstorage.read_only
        - https://www.googleapis.com/auth/logging.write
        - https://www.googleapis.com/auth/monitoring.write
        - https://www.googleapis.com/auth/service.management.readonly
        - https://www.googleapis.com/auth/servicecontrol
      tags:
        items:
        - {{ gcloud_env }}
        - {{ gcloud_env }}-infranode
        - {{ gcloud_env }}-node
  type: compute.v1.instanceTemplate    
  
# group managers

- name: {{ gcloud_env }}-master-igm
  properties:
    baseInstanceName: {{ gcloud_env }}-master
    instanceTemplate: $(ref.{{ gcloud_env }}-master-template.selfLink)
    namedPorts:
    - name: {{ gcloud_env }}-web-console
      port: 8443
    targetPools:
    - $(ref.{{ gcloud_env }}-master-network-lb-pool.selfLink)
    targetSize: {{ gcloud_masters_num }}
    region: {{ gcloud_region }}
    distributionPolicy:
      zones: 
{% for i in gcloud_masters_zones %}       
      - zone: "zones/{{ i }}"
{% endfor %}  
  type: compute.beta.regionInstanceGroupManager  
- name: {{ gcloud_env }}-appnode-igm
  properties:
    baseInstanceName: {{ gcloud_env }}-node
    instanceTemplate: $(ref.{{ gcloud_env }}-appnode-template.selfLink)
    targetSize: {{ gcloud_appnodes_num }}
    region: {{ gcloud_region }}
    distributionPolicy:
      zones: 
{% for i in gcloud_appnodes_zones %}       
      - zone: "zones/{{ i }}"
{% endfor %}  
  type: compute.beta.regionInstanceGroupManager  
- name: {{ gcloud_env }}-infranode-igm
  properties:
    baseInstanceName: {{ gcloud_env }}-infranode
    instanceTemplate: $(ref.{{ gcloud_env }}-infranode-template.selfLink)
    targetPools:
    - $(ref.{{ gcloud_env }}-infranode-network-lb-pool.selfLink)
    targetSize: {{ gcloud_infranodes_num }}
    region: {{ gcloud_region }}
    distributionPolicy:
      zones: 
{% for i in gcloud_infranodes_zones %}       
      - zone: "zones/{{ i }}"
{% endfor %}  
  type: compute.beta.regionInstanceGroupManager 
  
# master networking       

- name: {{ gcloud_env] }}-master-https-lb-health-check
  properties:
    checkIntervalSec: 5
    description: ''
    healthyThreshold: 2
    httpsHealthCheck:
      port: 8443
      proxyHeader: NONE
      requestPath: /healthz
    timeoutSec: 5
    type: HTTPS
    unhealthyThreshold: 2
  type: compute.v1.healthCheck
  
  
- name: {{ gcloud_env }}-master-network-lb-health-check
  properties:
    checkIntervalSec: 5
    description: ''
    healthyThreshold: 2
    host: ''
    port: 8080
    requestPath: /healthz
    timeoutSec: 5
    unhealthyThreshold: 2
  type: compute.v1.httpHealthCheck
  
# master internal
# forwarding rule -> backendservice -> instance group
#     health check / 

- name: {{ gcloud_env }}-master-internal-https-lb-backend
  properties:
    healthChecks:
    - $(ref.{{ gcloud_env }}-master-https-lb-health-check.selfLink)
    loadBalancingScheme: INTERNAL
    portName: {{ gcloud_env }}-web-console
    protocol: HTTPS
    timeoutSec: 300
    backends:
    - group: $(ref.{{ gcloud_env }}-master.instanceGroup)
  type: compute.v1.backendService
  
- type: compute.v1.forwardingRule
  name: {{ gcloud_env }}-master-internal-fwr
  properties: 
    region: {{ gcloud_region }}
    ports: 
    - 8443
    IPProtocol: TCP
    loadBalancingScheme: INTERNAL
    backendService: $(ref.{{ gcloud_env }}-master-internal-https-lb-backend.selfLink)  
  
# master external  
# we are using a tcp load balancer becaue we don't want to upload the master cert to the https proxy

- name: {{ gcloud_env }}-master-enternal-fw
  type: compute.v1.firewall
  properties:
    allowed:
    - IPProtocol: tcp
      ports:
      - 8443
    sourceRange: 0.0.0.0/0
    targetTags:
    - {{ gcloud_env }}-master
    
- type: compute.v1.address
  name: {{ gcloud_env }}-master-external
  properties:
    region: {{ gcloud_region }}    
    
- type: compute.v1.targetPool
  name: {{ gcloud_env }}-master-pool-
  properties:
    region: {{ gcloud_region }}
    instances: 
    - $(ref.{{ gcloud_masters_name_prefix ~ i|string }}-{{ gcloud_env }}.selfLink)
#    healthChecks: 
#    - $(ref.master-https-health-check-{{ gcloud_env }}.selfLink)    

- name: {{ gcloud_env }}-master-https-lb-ip
  type: compute.v1.globalAddress
  
- name: {{ gcloud_env }}-master-https-lb-backend
  properties:
    healthChecks:
    - $(ref.{{ gcloud_env }}-master-https-lb-health-check.selfLink)
    loadBalancingScheme: EXTERNAL
    portName: {{ gcloud_env }}-web-console
    protocol: HTTPS
    timeoutSec: 300
    backends:
    - group: $(ref.{{ gcloud_env }}-master.instanceGroup)
  type: compute.v1.backendService

- name: {{ properties['prefix'] }}-master-https-lb-url-map
  properties:
    defaultService: $(ref.{{ gcloud_env }}-master-https-lb-backend.selfLink)
  type: compute.v1.urlMap

- name: {{ properties['prefix'] }}-master-https-lb-target
  properties:
    urlMap: $(ref.{{ gcloud_env }}-master-https-lb-url-map.selfLink)
    sslCertificates:
    - projects/{{env['project']}}/global/sslCertificates/{{ properties['prefix'] }}-master-https-lb-cert
  type: compute.v1.targetHttpsProxy



- name: {{ gcloud_env }}-master-https-lb-rule
  properties:
    IPProtocol: TCP
    description: ''
    IPAddress: $(ref.{{ gcloud_env }}-master-https-lb-ip.selfLink)
    loadBalancingScheme: EXTERNAL
    portRange: 8443-8443
    target: $(ref.{{ gcloud_env }}-master-https-lb-target.selfLink)
  type: compute.v1.globalForwardingRule

- name: {{ gcloud_env }}-master-network-lb-pool
  properties:
    description: ''
    healthChecks:
    - $(ref.{{ gcloud_env }}-master-network-lb-health-check.selfLink)
    region: {{ properties['region'] }}
  type: compute.v1.targetPool
  
- name: {{ gcloud_env }}-master-network-lb-ip
  properties:
    description: ''
    region: {{ properties['region'] }}
  type: compute.v1.address

- name: {{ gcloud_env }}-master-network-lb-rule
  properties:
    IPProtocol: TCP
    description: ''
    IPAddress: $(ref.{{ gcloud_env }}-master-network-lb-ip.selfLink)
    loadBalancingScheme: EXTERNAL
    portRange: 8443-8443
    region: {{ properties['region'] }}
    target: $(ref.{{ gcloud_env }}-master-network-lb-pool.selfLink)
  type: compute.v1.forwardingRule  
  
  
# infranode networking

- name: {{ properties['prefix'] }}-router-network-lb-health-check
  properties:
    checkIntervalSec: 5
    description: ''
    healthyThreshold: 2
    host: ''
    port: 1936
    requestPath: /healthz
    timeoutSec: 5
    unhealthyThreshold: 2
  type: compute.v1.httpHealthCheck  

  